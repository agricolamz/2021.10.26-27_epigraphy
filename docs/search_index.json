[["index.html", "Цифровая эпиграфика на стыке с Digital Humanities 1 О курсе 1.1 Пререквезиты", " Цифровая эпиграфика на стыке с Digital Humanities Г. Мороз 1 О курсе Это материалы школы по цифровой эпиграфике 2021. 1.1 Пререквезиты Мы будем использовать R [@r_core_team19], так что для двух ближайших занятий понадобятся: R на Windows на Mac на Linux, также можно добавить зеркало и установить из командной строки: sudo apt-get install r-cran-base RStudio — IDE для R (можно скачать здесь) и некоторые пакеты на R Часто можно увидеть или услышать, что R — язык программирования для “статистической обработки данных”. Изначально это, конечно, было правдой, но уже давно R — это полноценный язык программирования, который при помощи своих пакетов позволяет решать огромный спектр задач. В данной книге используется следующая версия R: ## [1] &quot;R version 4.1.1 (2021-08-10)&quot; Некоторые люди не любят устанавливать лишние программы себе на компьютер, несколько вариантов есть и для них: RStudio cloud — полная функциональность RStudio, пока бесплатная, но скоро это исправят; RStudio on rollApp — облачная среда, позволяющая разворачивать программы. Первый и вполне закономерный вопрос: зачем мы ставили R и отдельно еще какой-то RStudio? Если опустить незначительные детали, то R — это сам язык программирования, а RStudio — это среда (IDE), которая позволяет в этом языке очень удобно работать. Также надо будет установить слудующие пакеты: install.packages(c(&quot;tidyverse&quot;, &quot;leaflet&quot;, &quot;leaflet.minicharts&quot;)) "],["знакомство-с-rstudio.html", "2 Знакомство с RStudio 2.1 Знакомство с RStudio 2.2 Как получить помощь?", " 2 Знакомство с RStudio 2.1 Знакомство с RStudio 2.2 Как получить помощь? "],["введение-в-r.html", "3 Введение в R 3.1 Типы данных 3.2 Переменные 3.3 Пакеты 3.4 Чтение файлов 3.5 Манипуляция с данными", " 3 Введение в R 3.1 Типы данных 3.2 Переменные 3.3 Пакеты 3.4 Чтение файлов 3.5 Манипуляция с данными 3.5.1 filter() 3.5.2 count() 3.5.3 mutate() 3.5.4 group_by() %&gt;% summarise() 3.5.5 group_by() %&gt;% mutate() "],["визуализация-с-ggplot2.html", "4 Визуализация с ggplot2 4.1 Построим первый график 4.2 Другие geom_...-ы 4.3 Сase studies", " 4 Визуализация с ggplot2 Для начала включим библиотеку library(&quot;tidyverse&quot;) и скачаем датасет: df &lt;- read_csv(&quot;https://tinyurl.com/yzfgony9&quot;) 4.1 Построим первый график Сначала сделаем данные для визуализации: df %&gt;% count(place) Теперь сделаем наш первый график: df %&gt;% count(place) %&gt;% ggplot()+ aes(x = place, y = n)+ geom_col() Мы можем поменять цвет получившегося: df %&gt;% count(place) %&gt;% ggplot()+ aes(x = place, y = n)+ geom_col(fill = &quot;darkgreen&quot;) Попробуем разбить по полу: df %&gt;% count(gender) %&gt;% ggplot()+ aes(x = gender, y = n)+ geom_col() Очень много категорий, давайте оставим только f, m и n: df %&gt;% count(gender) %&gt;% filter(gender == &quot;f&quot; | gender == &quot;m&quot; | gender == &quot;n&quot;) %&gt;% ggplot()+ aes(x = gender, y = n)+ geom_col() Получившееся можно разбить по населенному пункту: df %&gt;% count(gender, place) %&gt;% filter(gender == &quot;f&quot; | gender == &quot;m&quot; | gender == &quot;n&quot;) %&gt;% ggplot()+ aes(x = gender, y = n, fill = place)+ geom_col() Так графики сложно сравнивать, так что давайте сделаем их рядом: df %&gt;% count(gender, place) %&gt;% filter(gender == &quot;f&quot; | gender == &quot;m&quot; | gender == &quot;n&quot;) %&gt;% ggplot()+ aes(x = gender, y = n, fill = place)+ geom_col(position = &quot;dodge&quot;) Если мы не хотим сравнивать графики между собой, то их можно развести по разным подграфикам: df %&gt;% count(gender, place) %&gt;% filter(gender == &quot;f&quot; | gender == &quot;m&quot; | gender == &quot;n&quot;) %&gt;% ggplot()+ aes(x = gender, y = n)+ geom_col(position = &quot;dodge&quot;)+ facet_wrap(~place) По умолчанию рисуется одинаковая шкала, но можно это изменить при помощи аргумента scales = \"free\": df %&gt;% count(gender, place) %&gt;% filter(gender == &quot;f&quot; | gender == &quot;m&quot; | gender == &quot;n&quot;) %&gt;% ggplot()+ aes(x = gender, y = n)+ geom_col(position = &quot;dodge&quot;)+ facet_wrap(~place, scales = &quot;free&quot;) Ну что же настал момент, когда можно остановиться и осмыслить то, что мы видим: мужских надгробий больше чем женских; в Стародубе больше надгробий, из которых нельзя извлечь информацию про пол усопшего, чем в Мглине. Попробуйте воспроизвести график распределения типов надгробий. 4.2 Другие geom_...-ы В ggplot2 встроены очень много разных geom_...-ов (их инвентарь можно посмотреть, просто введя geom_ и нажав табуляцию). Например, мы можем украсить график, построенный ранее, просто добавив еще один geom_...: df %&gt;% count(gender, place) %&gt;% filter(gender == &quot;f&quot; | gender == &quot;m&quot; | gender == &quot;n&quot;) %&gt;% ggplot()+ aes(x = gender, y = n, label = n)+ geom_col()+ geom_label()+ facet_wrap(~place, scales = &quot;free&quot;) При этом необходимо помнить, что порядок действий имеет значение, если мы поменяем местами два geom_...-а, то получится не самый удачный график: df %&gt;% count(gender, place) %&gt;% filter(gender == &quot;f&quot; | gender == &quot;m&quot; | gender == &quot;n&quot;) %&gt;% ggplot()+ aes(x = gender, y = n, label = n)+ geom_label()+ geom_col()+ facet_wrap(~place, scales = &quot;free&quot;) 4.3 Сase studies 4.3.1 Распределение надгробий по полу в каждом из населенных пунктов df %&gt;% arrange(just_year_gre) %&gt;% group_by(place, gender) %&gt;% mutate(value = 1, sum = cumsum(value)) %&gt;% ggplot()+ aes(just_year_gre, sum, color = gender)+ geom_point()+ geom_line()+ facet_wrap(~place, scales = &quot;free&quot;)+ labs(x = &quot;&quot;, y = &quot;количество надгробий&quot;) 4.3.2 Распределение некоторых имен во времени df %&gt;% filter(!is.na(name_ru), !is.na(just_year_gre)) %&gt;% select(tombstone_code, name, fathers_name, just_year_gre) %&gt;% pivot_longer(names_to = &quot;type&quot;, values_to = &quot;name&quot;, name:fathers_name) %&gt;% mutate(name = str_split(name, &quot; &quot;)) %&gt;% unnest_longer(name) "],["работа-с-картами-пакет-leaflet.html", "5 Работа с картами пакет leaflet 5.1 Визуализация с leaflet", " 5 Работа с картами пакет leaflet 5.1 Визуализация с leaflet Для начала включим библиотеку: library(&quot;tidyverse&quot;) library(&quot;leaflet&quot;) и скачаем датасет: df &lt;- read_csv(&quot;data/sdb_mgl_bsh_rsk_datasets.csv&quot;) Мы можем нарисовать точки, полученные из кладбища в Стародубе: df %&gt;% filter(place == &quot;SDB&quot;) %&gt;% leaflet() %&gt;% addTiles() %&gt;% addCircles(lng = ~longitude, lat = ~latitude, stroke = NA, radius = 2, label = ~tombstone_code) Мы можем раскрасить наши точки на основании пола: pal_gender &lt;- colorFactor(&quot;Set1&quot;, domain = df$gender) df %&gt;% filter(place == &quot;SDB&quot;) %&gt;% leaflet() %&gt;% addTiles() %&gt;% addCircles(lng = ~longitude, lat = ~latitude, stroke = NA, radius = 2, fillOpacity = 1, label = ~tombstone_code, color = ~pal_gender(gender)) %&gt;% addLegend(pal = pal_gender, values = ~gender, title = &quot;&quot;) Зеленых точек n достаточно много, можно попробовать их убрать: df %&gt;% filter(place == &quot;SDB&quot;, gender != &quot;n&quot;) %&gt;% leaflet() %&gt;% addTiles() %&gt;% addCircles(lng = ~longitude, lat = ~latitude, stroke = NA, radius = 2, fillOpacity = 1, label = ~tombstone_code, color = ~pal_gender(gender)) %&gt;% addLegend(pal = pal_gender, values = ~gender, title = &quot;&quot;) Попробуем нарисовать надгробия с кладбища в Бешенковичах: df %&gt;% filter(place == &quot;BSH&quot;, gender != &quot;n&quot;) %&gt;% leaflet() %&gt;% addTiles() %&gt;% addCircles(lng = ~longitude, lat = ~latitude, stroke = NA, radius = 2, fillOpacity = 1, label = ~tombstone_code, color = ~pal_gender(gender)) %&gt;% addLegend(pal = pal_gender, values = ~gender, title = &quot;&quot;) Попробуем нарисовать кладбище в Бешенковичах и посмотрим, где расположены надгробия с тегами роженица: df %&gt;% mutate(labour = str_detect(tags, &quot;роды&quot;), labour = ifelse(is.na(labour), FALSE, labour)) -&gt; df pal_labour &lt;- colorFactor(&quot;Set1&quot;, domain = df$labour) df %&gt;% filter(place == &quot;BSH&quot;, !is.na(labour)) %&gt;% leaflet() %&gt;% addTiles() %&gt;% addCircles(lng = ~longitude, lat = ~latitude, stroke = NA, radius = 2, fillOpacity = 1, label = ~tombstone_code, color = ~pal_labour(labour)) %&gt;% addLegend(pal = pal_labour, values = ~labour, title = &quot;Распределение рожениц&quot;) Попробуем нарисовать кладбище в Бешенковичах и посмотрим, как оно заполнялось: df %&gt;% filter(place == &quot;BSH&quot;, !is.na(just_year_gre)) %&gt;% group_by(tombstone_code) %&gt;% mutate(id = 1:n()) %&gt;% filter(id == 1) %&gt;% ungroup() %&gt;% mutate(value = 1) %&gt;% arrange(-just_year_gre) %&gt;% pivot_wider(names_from = just_year_gre, values_from = value, values_fill = 0) %&gt;% pivot_longer(values_to = &quot;value&quot;, names_to = &quot;just_year_gre&quot;, `1772`:`1968`) %&gt;% group_by(tombstone_code, id) %&gt;% mutate(value = cumsum(value)) -&gt; bsh_sum library(leaflet.minicharts) leaflet() %&gt;% addTiles() %&gt;% addLegend(pal = pal_gender, values = bsh_sum$gender, title = &quot;&quot;) %&gt;% addMinicharts(lng = bsh_sum$longitude, lat = bsh_sum$latitude, chartdata = bsh_sum$value, time = as.double(bsh_sum$just_year_gre), fillColor = pal_gender(bsh_sum$gender), width = 7) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
