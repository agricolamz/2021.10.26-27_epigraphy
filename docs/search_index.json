[["визуализация-с-ggplot2.html", "3 Визуализация с ggplot2 3.1 Построим первый график 3.2 Другие geom_...-ы 3.3 Сase studies", " 3 Визуализация с ggplot2 Для начала включим библиотеку library(&quot;tidyverse&quot;) и скачаем датасет: df &lt;- read_csv(&quot;https://tinyurl.com/yzfgony9&quot;) 3.1 Построим первый график Сначала сделаем данные для визуализации: df %&gt;% count(place) Теперь сделаем наш первый график: df %&gt;% count(place) %&gt;% ggplot()+ aes(x = place, y = n)+ geom_col() Мы можем поменять цвет получившегося: df %&gt;% count(place) %&gt;% ggplot()+ aes(x = place, y = n)+ geom_col(fill = &quot;darkgreen&quot;) Попробуем добавить гендерную принадлежность усопших: df %&gt;% count(gender, place) %&gt;% ggplot()+ aes(x = place, y = n, fill = gender)+ geom_col() Так распределения сложно сравнивать, так что давайте сделаем их рядом: df %&gt;% count(gender, place) %&gt;% ggplot()+ aes(x = place, y = n, fill = gender)+ geom_col(position = &quot;dodge&quot;) Если мы не хотим сравнивать графики между собой, то их можно развести по разным подграфикам: df %&gt;% count(gender, place) %&gt;% ggplot()+ aes(x = gender, y = n)+ geom_col(position = &quot;dodge&quot;)+ facet_wrap(~place) По умолчанию рисуется одинаковая шкала, но можно это изменить при помощи аргумента scales = \"free\": df %&gt;% count(gender, place) %&gt;% ggplot()+ aes(x = gender, y = n)+ geom_col(position = &quot;dodge&quot;)+ facet_wrap(~place, scales = &quot;free&quot;) Ну что же настал момент, когда можно остановиться и осмыслить то, что мы видим: мужских надгробий больше чем женских (видите исключение?); сохранность текстов эпитафий (которые позволяют установить пол покойного) самая высокая в Бешенковичах и самая низкая — в Стародубе. Попробуйте воспроизвести график распределения типов надгробий. 3.2 Другие geom_...-ы В ggplot2 встроены очень много разных geom_...-ов (их инвентарь можно посмотреть, просто введя geom_ и нажав табуляцию). Например, мы можем украсить график, построенный ранее, просто добавив еще один geom_...: df %&gt;% count(gender, place) %&gt;% ggplot()+ aes(x = gender, y = n, label = n)+ geom_col()+ geom_label()+ facet_wrap(~place, scales = &quot;free&quot;) При этом необходимо помнить, что порядок действий имеет значение, если мы поменяем местами два geom_...-а, то получится не самый удачный график: df %&gt;% count(gender, place) %&gt;% ggplot()+ aes(x = gender, y = n, label = n)+ geom_label()+ geom_col()+ facet_wrap(~place, scales = &quot;free&quot;) Попробуем вывести вместо абсолютных значений доли. Для этого надо будет вспомнить комбинацию group_by() %&gt;% summurise() из предыдущего раздела: df %&gt;% count(gender, place) %&gt;% group_by(place) %&gt;% mutate(ratio = n/sum(n), ratio = round(ratio, 3)) %&gt;% # округлим до 3 знаков после запятой ggplot()+ aes(x = gender, y = n, label = ratio)+ geom_col()+ geom_label()+ facet_wrap(~place, scales = &quot;free&quot;) 3.3 Сase studies 3.3.1 Гендерное распределение усопших Посмотрим на распределение надгробий по десятилетиям: df %&gt;% filter(!is.na(year)) %&gt;% mutate(decade = floor(year/10)*10) %&gt;% count(decade, gender, place) %&gt;% ggplot()+ aes(decade, n, fill = gender)+ geom_col(position = &quot;dodge&quot;)+ labs(x = &quot;&quot;, y = &quot;количество захоронений&quot;)+ facet_wrap(~place, scales = &quot;free&quot;, nrow = 3) df %&gt;% filter(!is.na(year)) %&gt;% arrange(year) %&gt;% group_by(gender) %&gt;% mutate(value = 1, sum = cumsum(value)) %&gt;% ggplot()+ aes(year, sum, color = gender)+ geom_point()+ geom_line()+ labs(x = &quot;&quot;, y = &quot;кумулятивное количество захоронений&quot;) Какой вывод можно сделать на основании этого графика? df %&gt;% filter(!is.na(year)) %&gt;% arrange(year) %&gt;% group_by(place, gender) %&gt;% mutate(value = 1, sum = cumsum(value)) %&gt;% ggplot()+ aes(year, sum, color = gender)+ geom_point()+ geom_line()+ facet_wrap(~place, scales = &quot;free&quot;, nrow = 3)+ labs(x = &quot;&quot;, y = &quot;кумулятивное количество захоронений&quot;) Какой вывод можно сделать на основании этого графика? 3.3.2 Распределение мучеников df %&gt;% filter(place == &quot;Рашков&quot;) %&gt;% mutate(kadosh = str_detect(tags, &quot;кадош&quot;), kadosh = ifelse(is.na(kadosh), FALSE, kadosh)) %&gt;% ggplot()+ aes(x = year, fill = kadosh)+ geom_histogram()+ labs(x = &quot;год&quot;, y = &quot;количество захоронений&quot;) 3.3.3 Распределение некоторых имен во времени Возьмем наш датасет и выясним 10 самых популярных мужских и женских имен: df %&gt;% filter(!is.na(name), gender != &quot;n&quot;) %&gt;% mutate(name = str_split(name, &quot; &quot;)) %&gt;% unnest_longer(name) %&gt;% count(name, gender, sort = TRUE) %&gt;% group_by(gender) %&gt;% top_n(10) %&gt;% ungroup() %&gt;% mutate(name = fct_reorder(name, n)) %&gt;% ggplot()+ aes(n, name)+ geom_col()+ facet_wrap(~gender, scales = &quot;free&quot;) Мы также можем посмотреть на распределение в каждом населенном пункте: library(tidytext) # этот пакет нужен для функции reorder_within() df %&gt;% filter(!is.na(name), gender != &quot;n&quot;) %&gt;% mutate(name = str_split(name, &quot; &quot;)) %&gt;% unnest_longer(name) %&gt;% count(name, gender, place, sort = TRUE) %&gt;% group_by(place, gender) %&gt;% top_n(10) %&gt;% ungroup() %&gt;% mutate(name = reorder_within(name, by = n, within = place)) %&gt;% ggplot()+ aes(n, name)+ geom_col()+ facet_wrap(gender~place, scales = &quot;free&quot;)+ scale_y_reordered() Попробуем посмотреть, как эти имена распределены во времени. Для начала создадим датасет с самыми популярными именами: df %&gt;% filter(!is.na(name), gender != &quot;n&quot;) %&gt;% mutate(name = str_split(name, &quot; &quot;)) %&gt;% unnest_longer(name) %&gt;% count(name, gender, sort = TRUE) %&gt;% group_by(gender) %&gt;% top_n(3) %&gt;% pull(name) -&gt; popular_names popular_names ## [1] &quot;Сара&quot; &quot;Моше&quot; &quot;Авраам&quot; &quot;Хая&quot; &quot;Ицхак&quot; &quot;Рахель&quot; df %&gt;% filter(!is.na(name), !is.na(year), gender != &quot;n&quot;) %&gt;% mutate(name = str_split(name, &quot; &quot;)) %&gt;% unnest_longer(name) %&gt;% filter(name %in% popular_names) %&gt;% arrange(year) %&gt;% mutate(value = 1) %&gt;% group_by(place, name) %&gt;% mutate(sum = cumsum(value)) %&gt;% ggplot()+ aes(year, sum, color = name)+ geom_point()+ geom_line()+ facet_grid(gender~place, scales = &quot;free&quot;)+ labs(x = &quot;&quot;, y = &quot;количество захоронений&quot;) df %&gt;% filter(!is.na(name), !is.na(year), gender != &quot;n&quot;) %&gt;% mutate(name = str_split(name, &quot; &quot;)) %&gt;% unnest_longer(name) %&gt;% filter(name %in% popular_names) %&gt;% count() ggplot()+ aes(year, sum, color = gender)+ geom_point()+ geom_line()+ facet_wrap(~place, scales = &quot;free&quot;, nrow = 3)+ labs(x = &quot;&quot;, y = &quot;кумулятивное количество захоронений&quot;) Какую разницу вы видите между разными населенными пунктами? "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
